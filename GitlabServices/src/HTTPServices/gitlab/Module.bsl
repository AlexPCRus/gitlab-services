#Область СлужебныйПрограммныйИнтерфейс

Функция ServicesGET( Запрос )
	
	Перем ОписаниеСервиса;
	Перем Ответ;
	
	Ответ = Новый HTTPСервисОтвет( КодОтветаHTTP.КодыОтветаHTTP().OK );
	
	ОписаниеСервиса = РаботаСИнтернетСервисами.ПолучитьОписаниеСервиса("gitlab");
	
	ТелоОтвета = Новый Структура();
	ТелоОтвета.Вставить( "version", Метаданные.Версия );
	ТелоОтвета.Вставить( "services", ОписаниеСервиса );
	
	РаботаСИнтернетСервисами.УстановитьТелоОтветаИзСтроки( Ответ, КоннекторHTTP.ОбъектВJson(ТелоОтвета) );
	
	Возврат Ответ;
	
КонецФункции




















Функция WebhookUpdates(Запрос)
	
	Перем Ответ;
	Перем ОбработчикСобытий;
	Перем ДанныеТелаЗапроса;
	
	Ответ = Новый HTTPСервисОтвет(400);
	
	ОбработчикСобытий = СервисыGitLab.НайтиОбработчикСобытияПоHTTPЗапросу(Запрос);
	
	Если ОбработчикСобытий = Неопределено Тогда
		
		Ответ = Новый HTTPСервисОтвет(403);
		СервисыGitLab.ЗалогироватьОшибку("GitLab",
										 "ОбработкаЗапроса",
										 ОбработчикСобытий,
										 НСтр("ru = 'Секретный токен не найден.'"),
										 Ответ);
										 
		Возврат Ответ;
		
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ЗагружатьФайлыИзВнешнегоХранилища") Тогда
		
		Ответ = Новый HTTPСервисОтвет(423);
		СервисыGitLab.ЗалогироватьПредупреждение("GitLab",
												 "ОбработкаЗапроса",
												 ОбработчикСобытий,
												 НСтр("ru = 'Функционал загрузки из внешнего хранилища отключен.'"),
												 Ответ);
		
		Возврат Ответ;
		
	КонецЕсли;
	
	Ответ = Неопределено;
	СервисыGitLab.ПроверитьЗапросUpdates(ОбработчикСобытий, Запрос, Ответ);
	
	Если Ответ.КодСостояния = 200 Тогда
		
		ДанныеТелаЗапроса = Неопределено;
		СервисыGitLab.ПолучитьДанныеТелаЗапроса(ОбработчикСобытий, Запрос, Ответ, ДанныеТелаЗапроса);
		
	КонецЕсли;
	
	Если Ответ.КодСостояния = 200 Тогда
		
		СервисыGitLab.ПроверитьТелоЗапроса(ОбработчикСобытий, ДанныеТелаЗапроса, Ответ);
		
	КонецЕсли;
	
	Если Ответ.КодСостояния = 200 Тогда
		
		СервисыGitLab.ЗапуститьОбработкуДанныхВФоне(ОбработчикСобытий, ДанныеТелаЗапроса);
		
	КонецЕсли;
	
	Если Ответ.КодСостояния = 200 Тогда
		
		СервисыGitLab.ЗалогироватьИнформацию("GitLab",
											 "ОбработкаЗапроса.Окончание",
											 ОбработчикСобытий,
											 НСтр("ru = 'Запрос обработан.'"),
											 Ответ);
											 
	КонецЕсли;
	
	Возврат Ответ;
	
КонецФункции

#КонецОбласти