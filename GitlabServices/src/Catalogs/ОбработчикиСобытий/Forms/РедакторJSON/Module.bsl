#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем КлючЗаписи;
	Перем ЗаписьСуществует;
	Перем КомандаСуществует;
	Перем ДанныеЗаполнения;
	
	КлючЗаписи = Параметры.Ключ;
	Команда    = Параметры.Команда;
	
	ЗаписьСуществует = НЕ (КлючЗаписи = Неопределено
		ИЛИ ТипЗнч(КлючЗаписи) <> Тип("РегистрСведенийКлючЗаписи.ДанныеОбработчиковСобытий")
		ИЛИ КлючЗаписи.Пустой());
		
	КомандаСуществует = НЕ (ПустаяСтрока(Команда));
	
	Если НЕ (ЗаписьСуществует ИЛИ КомандаСуществует) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = Неопределено;
	ДанныеЗаполнения = СервисыGitLab.ИсходныеДанныеЗапросаВФорматеJSON(КлючЗаписи, Команда);
	
	ЗаполнитьЗначенияНаФорме(ДанныеЗаполнения, Команда);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ИнициализироватьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПользовательскийВариантПриИзменении(Элемент)
	
	Перем ЭтоСнятиеГалочки;
	Перем Режим;
	Перем Оповещение;
	
	ТекущиеДанные = Элементы.Коммиты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоСнятиеГалочки = НЕ ЭтотОбъект.ПользовательскийВариант;
	
	Если ЭтоСнятиеГалочки Тогда
		
		ДополнительныеПараметры = Новый ФиксированнаяСтруктура("Ключ, Коммит", Параметры.Ключ, ТекущиеДанные.Коммит);

		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаНастройкиПоУмолчанию", ЭтаФорма, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Сбросить настройки на значения по умолчанию?'"), Режим);
		
	Иначе
		
		УстановитьРежимРедактированияJSON(ЭтотОбъект.ПользовательскийВариант);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКоммиты

&НаКлиенте
Процедура КоммитыПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ТекстJSON = Элемент.ТекущиеДанные.ТекстJSON;
	УстановитьРежимРедактированияJSON(Элемент.ТекущиеДанные.ПользовательскийВариант);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьJSON(Команда)
	
	Перем ТекущиеДанные;
	Перем СохраняемыеДанные;
	Перем ДополнительныеПараметры;
	Перем Режим;
	Перем Оповещение;
	
	ТекущиеДанные = Элементы.Коммиты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохраняемыеДанные = Новый Структура("Коммит, JSON", ТекущиеДанные.Коммит, ТекстJSON);
	ДополнительныеПараметры = Новый ФиксированнаяСтруктура("Ключ, СохраняемыеДанные", Параметры.Ключ, СохраняемыеДанные);
	
	Если ЕстьПользовательскиеНастройки(ДополнительныеПараметры) Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопросаСохранитьJSON", ЭтаФорма, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Пользовательские настройки уже существуют, перезаписать?'"), Режим);
	Иначе
		СохранитьJSONНаКлиенте(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьЗначенияНаФорме(Знач ДанныеЗаполнения, Знач Команда)
	
	Если Команда = "ОткрытьJSONТелаЗапроса" Тогда
		ЭтотОбъект.ТекстJSON = ДанныеЗаполнения;
	Иначе
		Коммиты.Загрузить(ДанныеЗаполнения);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьФорму()
	
	Если Коммиты.Количество() = 0 Тогда
		Элементы.ГруппаКоммиты.Видимость = Ложь;
		Элементы.ГруппаПользовательскийВариант.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимРедактированияJSON(Знач Состояние = Ложь)
	
	Если ЭтотОбъект.ПользовательскийВариант <> Состояние Тогда
		ЭтотОбъект.ПользовательскийВариант = Состояние;
	КонецЕсли;
	
	Элементы.ТекстJSON.ТолькоПросмотр = НЕ Состояние;
	Элементы.СохранитьJSON.Доступность = Состояние;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьПользовательскиеНастройки(Знач Параметры)

	Перем ДанныеТелаЗапроса;
	Перем Результат;
	
	Результат = Ложь;

	// Концептуально не храним данные на форме, поэтому будем считывать с регистра каждый раз.
	ДанныеТелаЗапроса = РегистрыСведений.ДанныеОбработчиковСобытий.ПолучитьДанныеТелаЗапроса(Параметры.Ключ);
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	Результат = СервисыGitLab.ЕстьПользовательскиеНастройкиВДанныхКоммита(ДанныеТелаЗапроса,
																			Параметры.СохраняемыеДанные.Коммит);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопросаСохранитьJSON(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
        Возврат;
    КонецЕсли;

	СохранитьJSONНаКлиенте(ДополнительныеПараметры);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопросаНастройкиПоУмолчанию(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Перем НастройкиПоУмолчанию;
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		УстановитьРежимРедактированияJSON(НЕ ЭтотОбъект.ПользовательскийВариант);
        Возврат;
	КонецЕсли;

	НастройкиПоУмолчанию = УдалитьПользовательскиеНастройки(ДополнительныеПараметры);
	
	ЭтотОбъект.ТекстJSON = НастройкиПоУмолчанию;
	
	ПривестиВСоответствиеТекущиеДанныеКоммитаИРеквизитовФормы();
	УстановитьРежимРедактированияJSON(ЭтотОбъект.ПользовательскийВариант);

КонецПроцедуры

&НаКлиенте
Процедура ПривестиВСоответствиеТекущиеДанныеКоммитаИРеквизитовФормы()
	
	Если Элементы.Коммиты.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Коммиты.ТекущиеДанные.ПользовательскийВариант = ЭтотОбъект.ПользовательскийВариант;
	Элементы.Коммиты.ТекущиеДанные.ТекстJSON = ЭтотОбъект.ТекстJSON;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УдалитьПользовательскиеНастройки(Знач Параметры)
	
	Перем ДанныеТелаЗапроса;
	Перем ЗаписываемыеДанные;
	Перем ХранилищеЗначенияДанныеТелаЗапроса;
	Перем Результат;
	
	Результат = "";

	// Концептуально не храним данные на форме, поэтому будем считывать с регистра каждый раз.
	ДанныеТелаЗапроса = РегистрыСведений.ДанныеОбработчиковСобытий.ПолучитьДанныеТелаЗапроса(Параметры.Ключ);
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	СервисыGitLab.УдалитьПользовательскиеНастройкиВДанныхКоммита(ДанныеТелаЗапроса, Параметры.Коммит, Результат);
	Если НЕ ПустаяСтрока(Результат) Тогда
		ХранилищеЗначенияДанныеТелаЗапроса = Новый ХранилищеЗначения(ДанныеТелаЗапроса);
		ЗаписываемыеДанные = Новый Структура("ДанныеТелаЗапроса", ХранилищеЗначенияДанныеТелаЗапроса);
		РегистрыСведений.ДанныеОбработчиковСобытий.ЗаписатьЗначенияРесурсов(Параметры.Ключ, ЗаписываемыеДанные); 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура СохранитьJSONНаКлиенте(Знач ДополнительныеПараметры)
	
	СохранитьJSONНаСервере(ДополнительныеПараметры);
	
	ЭтотОбъект.ТекстJSON = ДополнительныеПараметры.СохраняемыеДанные.JSON;
	
	ПривестиВСоответствиеТекущиеДанныеКоммитаИРеквизитовФормы();
	УстановитьРежимРедактированияJSON(ЭтотОбъект.ПользовательскийВариант);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьJSONНаСервере(Знач Параметры)
	
	Перем ДанныеТелаЗапроса;
	Перем ХранилищеЗначенияДанныеТелаЗапроса;	
	
	// Концептуально не храним данные на форме, поэтому будем считывать с регистра каждый раз.
	ДанныеТелаЗапроса = РегистрыСведений.ДанныеОбработчиковСобытий.ПолучитьДанныеТелаЗапроса(Параметры.Ключ);
	Если ДанныеТелаЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СервисыGitLab.ДополнитьДанныеТелаЗапросаПользовательскимиНастройками(Параметры.СохраняемыеДанные.Коммит,
			Параметры.СохраняемыеДанные.JSON, ДанныеТелаЗапроса);
	ХранилищеЗначенияДанныеТелаЗапроса = Новый ХранилищеЗначения(ДанныеТелаЗапроса);
	Данные = Новый Структура("ДанныеТелаЗапроса", ХранилищеЗначенияДанныеТелаЗапроса);
	РегистрыСведений.ДанныеОбработчиковСобытий.ЗаписатьЗначенияРесурсов(Параметры.Ключ, Данные); 
	
КонецПроцедуры


#КонецОбласти