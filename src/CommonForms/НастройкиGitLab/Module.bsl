#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем Настройки;
	
	Настройки = СервисыGitLab.НастройкиСервисовGitLab();
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Настройки);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		
		СохранитьНаСервере();
		ОбновитьИнтерфейс();
		
	КонецЕсли;

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить(ЗагружатьФайлыИзВнешнегоХранилища);
	Константы.GitLabUserPrivateToken.Установить(GitLabUserPrivateToken);
	Константы.ИмяФайлаНастроекМаршрутизацииGitLab.Установить(ИмяФайлаНастроекМаршрутизации);
	Константы.ПользовательИБПолучателяGitLab.Установить(ПользовательИБПолучателя);
	Константы.ПарольПользователяИБПолучателяGitLab.Установить(ПарольПользователяИБПолучателя);
	Константы.ТаймаутGitLab.Установить(ТаймаутGitLab);
	Константы.ТаймаутИБПолучателя.Установить(ТаймаутИБПолучателя);
	Константы.МестоположениеСервисаИБПолучателя.Установить(МестоположениеСервисаИБПолучателя);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти







