#Область ПрограммныйИнтерфейс

// Получает сохраненные данные тела HTTP-запроса.
// 
// Параметры:
// 	КлючЗапроса - РегистрСведенийКлючЗаписи.Webhooks - ключ записи по которой необходимо получить данные;
// Возвращаемое значение:
// 	Неопределено, Соответствие - ранее сохраненные данные тела запроса;
Функция ПолучитьДанныеТелаЗапроса(Знач КлючЗапроса) Экспорт
	
	Возврат ПолучитьДанныеХранилищаЗначения(КлючЗапроса, "ДанныеТелаЗапроса");
	
КонецФункции

// Получает сохраненные данные для отправки.
// 
// Параметры:
// 	КлючЗапроса - РегистрСведенийКлючЗаписи.Webhooks - ключ записи по которой необходимо получить данные;
// Возвращаемое значение:
// 	Неопределено, Соответствие - ранее сохраненные данные для отпавки;
Функция ПолучитьДанныеОтправки(Знач КлючЗапроса) Экспорт
	
	Возврат ПолучитьДанныеХранилищаЗначения(КлючЗапроса, "ДвоичныеДанные");
	
КонецФункции

// Получает сохраненные данные для отправки.
// 
// Параметры:
// 	КлючЗапроса - РегистрСведенийКлючЗаписи.Webhooks - ключ записи по которой необходимо получить данные;
// 	ИмяРесурса - Строка - имя ресурса, данные с которого необходимо получить;
// Возвращаемое значение:
// 	Неопределено, Соответствие - ранее сохраненные данные;
Функция ПолучитьДанныеХранилищаЗначения(Знач КлючЗапроса, Знач ИмяРесурса)
	
	Перем МенеджерЗаписи;
	Перем Данные;
	
	Данные = Неопределено;
	Если КлючЗапроса = Неопределено ИЛИ ТипЗнч(КлючЗапроса) <> Тип("РегистрСведенийКлючЗаписи.Webhooks") Тогда
		Возврат Данные;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.Webhooks.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, КлючЗапроса);
	МенеджерЗаписи.Прочитать();

	Если МенеджерЗаписи.Выбран() Тогда
		Данные = МенеджерЗаписи[ИмяРесурса];
		Если ТипЗнч(Данные) = Тип("ХранилищеЗначения") Тогда
			Данные = Данные.Получить();
		КонецЕсли;
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

// Записывает ресурсы, переданные в качестве структуры.
// 
// Параметры:
// 	КлючЗапроса - РегистрСведенийКлючЗаписи.Webhooks - ключ записи, данные которой производится запись;
// 	Данные - Структура - данные для записи:
//	* Ключ - Строка - имя ресурса;
//	* Значение - ХранилищеЗначения - данные для записи на ресурс, указанный в ключе;
Процедура ЗаписатьЗначенияРесурсов(Знач КлючЗапроса, Знач Данные) Экспорт
	
	Перем Контекст;
	Перем НаборЗаписей;
	Перем НоваяЗапись;
		
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"РегистрСведений.Webhooks",
		"КлючЗапроса",
		КлючЗапроса,
		Тип("РегистрСведенийКлючЗаписи.Webhooks"));
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"РегистрСведений.Webhooks",
		"Данные",
		Данные,
		Тип("Структура"));

	НаборЗаписей = РегистрыСведений.Webhooks.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Идентификатор.Установить(КлючЗапроса.Идентификатор);
	НаборЗаписей.Отбор.Ключ.Установить(КлючЗапроса.Ключ);
	НаборЗаписей.Прочитать();

	Если НаборЗаписей.Количество() = 0 Тогда
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), КлючЗапроса);
	КонецЕсли;
	
	Для каждого СтрокаНабораЗаписей Из НаборЗаписей Цикл
		ЗаполнитьЗначенияСвойств(СтрокаНабораЗаписей, Данные);
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти