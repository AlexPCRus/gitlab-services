#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИсторияСобытийУстановитьОтборПоСсылке(Объект.Ссылка);
	СохраненныеДанныеУстановитьОтборПоСсылке(Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИмяТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИсториюСобытий(Команда)
	
	ОткрытьФорму("Справочник.Webhooks.Форма.УсловияОтбора",
				 ,
				 ЭтаФорма,
				 Новый УникальныйИдентификатор(),
				 ,
				 ,
				 Новый ОписаниеОповещения("ЗагрузитьИсториюСобытийЗавершение", ЭтаФорма),
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры
			 
&НаКлиенте
Процедура ОткрытьJSONТелаЗапроса(Команда)
	
	Перем ТекущаяСтрока;
	Перем ПараметрыОткрытия;
	
	ТекущаяСтрока = ЭтотОбъект.Элементы.СохраненныеДанные.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ключ", ТекущаяСтрока);
	ПараметрыОткрытия.Вставить("Команда", Команда.Имя);

	ОткрытьФорму("Справочник.Webhooks.Форма.РедакторJSON",
				 ПараметрыОткрытия,
				 ЭтаФорма,
				 ,
				 ,
				 ,
				 ,
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьJSONМаршрутизации(Команда)
	
	Перем ТекущаяСтрока;
	Перем ПараметрыОткрытия;
	
	ТекущаяСтрока = ЭтотОбъект.Элементы.СохраненныеДанные.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ключ", ТекущаяСтрока);
	ПараметрыОткрытия.Вставить("Команда", Команда.Имя);

	ОткрытьФорму("Справочник.Webhooks.Форма.РедакторJSON",
				 ПараметрыОткрытия,
				 ЭтаФорма,
				 ,
				 ,
				 ,
				 ,
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура РучнаяОтправкаДанных(Команда)
	
	Перем ТекущиеДанные;
	Перем ТекстВопроса;
	
	ТекущиеДанные = ЭтотОбъект.Элементы.СохраненныеДанные.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = СтрШаблон(НСтр("ru = 'Продолжить выполнение операции для %1?'"), ТекущиеДанные.Ключ);
	ПоказатьВопрос(Новый ОписаниеОповещения("РучнаяОтправкаДанныхЗавершение", ЭтотОбъект),
		ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0);
		
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьФоновыеЗадания(Команда)
	
	Перем ТекущаяСтрока;
	Перем ПараметрыОткрытия;
	
	ТекущаяСтрока = ЭтотОбъект.Элементы.СохраненныеДанные.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КлючЗаписи", ТекущаяСтрока);

	ОткрытьФорму("Справочник.Webhooks.Форма.ФоновыеЗадания",
				 ПараметрыОткрытия,
				 ЭтаФорма,
				 ,
				 ,
				 ,
				 ,
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				 
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСайтСMergeRequests(Команда)
	
	Перем ТекущаяСтрока;
	Перем URL;
	
	ТекущаяСтрока = ЭтотОбъект.Элементы.СохраненныеДанные.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;

	URL = MergeRequestsURL(ТекущаяСтрока);
	
	Если НЕ ПустаяСтрока(URL) Тогда
		#Если ВебКлиент Тогда
			НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения("ПослеПодключенияРасширенияРаботыСФайлами", Этаформа, URL));
		#Иначе
			ЗапуститьПриложение(URL);
   		#КонецЕсли		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИсторияСобытийУстановитьОтборПоСсылке(Знач Ссылка)
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ИсторияСобытий.Отбор, "Ссылка", ВидСравненияКомпоновкиДанных.Равно, Ссылка);
КонецПроцедуры

Процедура СохраненныеДанныеУстановитьОтборПоСсылке(Знач Ссылка)
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(СохраненныеДанные.Отбор, "Идентификатор", ВидСравненияКомпоновкиДанных.Равно, Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИсториюСобытийЗавершение(РезультатЗакрытия, Параметры) Экспорт
	
	Перем ДобавленоЗаписей;
	Перем Таймаут;
	
	Таймаут = 5;
	
	ДобавленоЗаписей = 0;	
	ЗагрузитьИсториюСобытийЗавершениеНаСервере(РезультатЗакрытия, Параметры, ДобавленоЗаписей);
	ПоказатьПредупреждение( , НСтр("ru = 'Добавлено записей: '") + Строка(ДобавленоЗаписей),
			Таймаут, НСтр("ru = 'Загрузка истории из журнала регистрации'"));
							   	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИсториюСобытийЗавершениеНаСервере(РезультатЗакрытия, Параметры, ДобавленоЗаписей)
	
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ДатаНачала", РезультатЗакрытия.ДатаНачала);
	ПараметрыОтбора.Вставить("ДатаОкончания", РезультатЗакрытия.ДатаОкончания);
	ПараметрыОтбора.Вставить("Метаданные", Метаданные.Справочники.Webhooks);
	ПараметрыОтбора.Вставить("Данные", Объект.Ссылка);
	
	ДобавленоЗаписей = 0;
	СервисыGitLab.ДекораторЗагрузитьИсториюСобытий(Метаданные.Справочники.Webhooks, "ИсторияСобытий", ПараметрыОтбора, ДобавленоЗаписей);
	
	ЭтаФорма.Элементы.ИсторияСобытий.Обновить();
		
КонецПроцедуры

&НаКлиенте
Процедура РучнаяОтправкаДанныхЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Перем ТекущаяСтрока;
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = ЭтотОбъект.Элементы.СохраненныеДанные.ТекущаяСтрока;
	РучнаяОтправкаДанныхНаСервере(Объект.Ссылка, ТекущаяСтрока);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура РучнаяОтправкаДанныхНаСервере(Знач Ссылка, Знач КлючЗапроса)
	Справочники.Webhooks.ЗапуститьОбработкуДанныхВручную(Ссылка, КлючЗапроса);
КонецПроцедуры

&НаСервереБезКонтекста
Функция MergeRequestsURL(Знач КлючЗапроса)
	
	Перем ДанныеТелаЗапроса;
	Перем Запрос;
	Перем ПараметрыЗапроса;
	Перем MergeRequests;
	Перем Ключ;
	Перем URL;
	Перем Результат;
	
	ДанныеТелаЗапроса = РегистрыСведений.Webhooks.ПолучитьДанныеТелаЗапроса(КлючЗапроса);
	
	Результат = "";
	
	Если ТипЗнч(ДанныеТелаЗапроса) <> Тип("Соответствие") Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = СервисыGitLab.СформироватьЗапросНаMergeRequests(ДанныеТелаЗапроса);
	
	ПараметрыЗапроса = Новый Соответствие;
	ПараметрыЗапроса.Вставить("PRIVATE-TOKEN", Запрос.СекретныйКлюч);
	
	MergeRequests = КоннекторHTTP.GetJson(Запрос.URL, ПараметрыЗапроса);
	
	// Значит запрос вернул не JSON, а ошибку или что-то еще, что нам не нужно.
	Если ТипЗнч(MergeRequests) = Тип("Соответствие") Тогда
		Возврат Результат;
	КонецЕсли;

	Для каждого MergeRequest Из MergeRequests Цикл
		
		Ключ = MergeRequest.Получить("merge_commit_sha");
		Если Ключ = Неопределено ИЛИ Ключ <> КлючЗапроса.Ключ Тогда
			Продолжить;
		КонецЕсли;
		
		URL = MergeRequest.Получить("web_url");
		Если URL <> Неопределено Тогда
			Результат = URL;
			Прервать;
		КонецЕсли;

	КонецЦикла;
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ПослеПодключенияРасширенияРаботыСФайлами(Подключено, ДополнительныеПараметры)Экспорт 
    Если Подключено Тогда
        НачатьЗапускПриложения(Новый ОписаниеОповещения("ПослеЗапуска", Этаформа), ДополнительныеПараметры);
    Иначе
        НачатьУстановкуРасширенияРаботыСФайлами(Новый ОписаниеОповещения("ПослеУстановкиРасширенияРаботыСФайлами", Этаформа, ДополнительныеПараметры));
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеУстановкиРасширенияРаботыСФайлами(ДополнительныеПараметры) Экспорт 
    НачатьПодключениеРасширенияРаботыСФайлами(Новый ОписаниеОповещения("ПослеПодключенияРасширенияРаботыСФайлами", Этаформа,  ДополнительныеПараметры))
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗапуска(КодВозврата, ДополнительныеПараметры) Экспорт 

КонецПроцедуры

#КонецОбласти



