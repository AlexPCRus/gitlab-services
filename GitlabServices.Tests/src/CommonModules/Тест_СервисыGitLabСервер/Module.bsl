// BSLLS-выкл.
#Область СлужебныйПрограммныйИнтерфейс

// @unit-test
Процедура Тест_НайтиОбработчикСобытияПоHTTPЗапросу(Фреймворк) Экспорт
	
	Фреймворк.ПроверитьНеЗаполненность(СервисыGitLab.НайтиОбработчикСобытияПоHTTPЗапросу(1));
	Фреймворк.ПроверитьНеЗаполненность(СервисыGitLab.НайтиОбработчикСобытияПоHTTPЗапросу(Неопределено));

	НачатьТранзакцию();
	
	Попытка

		СекретныйТокен = "блаблаблаюниттест";
		НовыйЭлемент = ДобавитьОбработчикСобытий("ЮнитТест1", СекретныйТокен);
		НовыйЭлемент = ДобавитьОбработчикСобытий("ЮнитТест2", СекретныйТокен);
		
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-Type", "application/json");
		Заголовки.Вставить("X-Gitlab-Event", "Push Hook");
		Заголовки.Вставить("X-Gitlab-Token", СекретныйТокен);
	
		HTTPЗапрос = Новый HTTPЗапрос("localhost", Заголовки);
		
		Фреймворк.Что(СервисыGitLab.НайтиОбработчикСобытияПоHTTPЗапросу(HTTPЗапрос).Ссылка).Равно(НовыйЭлемент.Ссылка);
		
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
	Исключение
		Если ТранзакцияАктивна() Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДобавитьОбработчикСобытий(Знач Наименование = "", Знач СекретныйТокен = "")
	
		НовыйЭлемент = Справочники.ОбработчикиСобытий.СоздатьЭлемент();
		НовыйЭлемент.Наименование = Наименование;
		НовыйЭлемент.СекретныйТокен = СекретныйТокен;
		НовыйЭлемент.Записать();
		
		Возврат НовыйЭлемент;
	
КонецФункции

#КонецОбласти