#Область СлужебныйПрограммныйИнтерфейс

// @unit-test
Процедура Тест_МетодУстановитьТелоОтветаИзJSON(Фреймворк) Экспорт

	Ответ = Новый HTTPСервисОтвет(200);
	ЭталонJSON = "123fffвап";
	РаботаСИнтернетСервисами.УстановитьТелоОтветаИзJSON(Ответ, ЭталонJSON);
	Фреймворк.ПроверитьРавенство(Ответ.ПолучитьТелоКакСтроку(), ЭталонJSON);

	Ответ = Новый HTTPСервисОтвет(200);
	Данные = Новый Структура("Ключ1", "Значение1");
	РаботаСИнтернетСервисами.УстановитьТелоОтветаИзJSON(Ответ, Данные);
	ЭталонJSON = "{
				 |""Ключ1"": ""Значение1""
				 |}";

	Фреймворк.ПроверитьРавенство(Ответ.ПолучитьТелоКакСтроку(), ЭталонJSON);

КонецПроцедуры

// @unit-test
Процедура Тест_МетодСобытиеЖурналаРегистрацииВТелоОтвета(Фреймворк) Экспорт

	Ответ = Новый HTTPСервисОтвет(200);
	Сообщение = "ТекстСообщения1";
	РаботаСИнтернетСервисами.СобытиеЖурналаРегистрацииВТелоОтвета(Ответ, Сообщение);
	ЭталонJSON = "{
				 |""Информация"": {
				 |""Сообщение"": ""ТекстСообщения1""
				 |}
				 |}";
	Фреймворк.ПроверитьРавенство(Ответ.ПолучитьТелоКакСтроку(), ЭталонJSON);

	Сообщение = "ТекстСообщения2";
	Информация = Перечисления.УровеньЖурналаРегистрации.Информация;
	РаботаСИнтернетСервисами.СобытиеЖурналаРегистрацииВТелоОтвета(Ответ, Сообщение, Информация);
	ЭталонJSON = "{
				 |""Информация"": {
				 |""Сообщение"": ""ТекстСообщения2""
				 |}
				 |}";
	Фреймворк.ПроверитьРавенство(Ответ.ПолучитьТелоКакСтроку(), ЭталонJSON);

	Сообщение = "ТекстСообщения3";
	Ошибка = Перечисления.УровеньЖурналаРегистрации.Ошибка;
	РаботаСИнтернетСервисами.СобытиеЖурналаРегистрацииВТелоОтвета(Ответ, Сообщение, Ошибка);
	ЭталонJSON = "{
				 |""Ошибка"": {
				 |""Сообщение"": ""ТекстСообщения3""
				 |}
				 |}";
	Фреймворк.ПроверитьРавенство(Ответ.ПолучитьТелоКакСтроку(), ЭталонJSON);
	Сообщение = "ТекстСообщения4";
	Информация = Новый Структура;
	РаботаСИнтернетСервисами.СобытиеЖурналаРегистрацииВТелоОтвета(Ответ, Сообщение, Информация);
	ЭталонJSON = "{
				 |""Информация"": {
				 |""Сообщение"": ""ТекстСообщения4""
				 |}
				 |}";
	Фреймворк.ПроверитьРавенство(Ответ.ПолучитьТелоКакСтроку(), ЭталонJSON);

КонецПроцедуры

// @unit-test
Процедура Тест_МетодТелоHTTPОтветаВКоллекциюКакJSON(Фреймворк) Экспорт

	ЭталонJSON = "{
				 |""Ключ1"": ""Значение1""
				 |}";
	ЭталонКоллекция = Новый Структура("Ключ1", "Значение1");

	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки( ЭталонJSON);

	Коллекция1 = Неопределено;
	РаботаСИнтернетСервисами.ТелоHTTPОтветаВКоллекциюКакJSON( Ответ, Истина, Ложь, Коллекция1);

	Коллекция2 = Неопределено;
	РаботаСИнтернетСервисами.ТелоHTTPОтветаВКоллекциюКакJSON( Ответ, Ложь, Ложь, Коллекция2);

	Коллекция3 = Неопределено;
	РаботаСИнтернетСервисами.ТелоHTTPОтветаВКоллекциюКакJSON( Ответ, Истина, Истина, Коллекция3);

	Фреймворк.ПроверитьТип( Коллекция1, "Соответствие");
	Фреймворк.ПроверитьТип( Коллекция2, "Структура");

	Фреймворк.ПроверитьРавенство( Коллекция1.Количество(), 1);
	Фреймворк.ПроверитьРавенство( Коллекция2.Количество(), 1);
	Фреймворк.ПроверитьРавенство( Коллекция3.Количество(), 2);

	Фреймворк.ПроверитьРавенство( ЭталонКоллекция.Ключ1, Коллекция1.Получить("Ключ1"));
	Фреймворк.ПроверитьРавенство( ЭталонКоллекция.Ключ1, Коллекция2.Ключ1);
	Фреймворк.ПроверитьРавенство( ЭталонJSON, Коллекция3.Получить("json"));

КонецПроцедуры

Функция ОписаниеСервисаПоАдресуВызовСервера(Знач URL) Экспорт

	Возврат РаботаСИнтернетСервисами.ОписаниеСервисаПоАдресу(URL);

КонецФункции

#Область ВспомогательныеПроцедурыИФункции

Функция ПолучитьОписаниеСервиса(Знач Сервис) Экспорт

	Возврат РаботаСИнтернетСервисами.ПолучитьОписаниеСервиса(Сервис);

КонецФункции

Функция ПолучитьЗагружатьФайлыИзВнешнегоХранилища() Экспорт

	Возврат Константы.ЗагружатьФайлыИзВнешнегоХранилища.Получить();

КонецФункции

Процедура УстановитьЗагружатьФайлыИзВнешнегоХранилища(Знач Значение) Экспорт

	Константы.ЗагружатьФайлыИзВнешнегоХранилища.Установить(Значение);

КонецПроцедуры

#КонецОбласти

#КонецОбласти