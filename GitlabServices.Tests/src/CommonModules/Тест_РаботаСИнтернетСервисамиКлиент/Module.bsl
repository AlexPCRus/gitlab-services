#Область СлужебныйПрограммныйИнтерфейс

//@unit-test
Процедура Тест_ПолучитьОписаниеСервисаСоответствуетЭталону(Фреймворк) Экспорт

	Тест_РаботаСИнтернетСервисамиСервер.УстановитьЗагружатьФайлыИзВнешнегоХранилища(Истина);
	
	ОписаниеСервиса = Тест_РаботаСИнтернетСервисамиСервер.ПолучитьОписаниеСервиса("gitlab");
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.Свойство("name"));
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.Свойство("desc"));
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.Свойство("enabled"));
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.Свойство("templates"));
	Фреймворк.ПроверитьРавенство(ОписаниеСервиса.templates.Количество(), 2);
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.templates[0].Свойство("name"));
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.templates[0].Свойство("desc"));
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.templates[0].Свойство("template"));
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.templates[0].Свойство("methods"));
	Фреймворк.ПроверитьРавенство(ОписаниеСервиса.templates[0].methods.Количество(), 1);
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.templates[0].methods[0].Свойство("name"));
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.templates[0].methods[0].Свойство("desc"));
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.templates[0].methods[0].Свойство("method"));
	
	Тест_РаботаСИнтернетСервисамиСервер.УстановитьЗагружатьФайлыИзВнешнегоХранилища(Ложь);

КонецПроцедуры


















// @unit-test
Процедура Тест_МетодПолученияОписанияВебСервисаПоАдресуСуществует(Фреймворк) Экспорт

	URL = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("МестоположениеСервисовИБРаспределителя");
	Фреймворк.ПроверитьЗаполненность(URL, "Не указан URL, проверьте user_settings.json.");
	Фреймворк.ПроверитьЛожь(ПустаяСтрока(URL), "URL не может быть пустым, проверьте user_settings.json.");

	Шаблон = СтрШаблон("а = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(""%1"")", URL);
	Фреймворк.ПроверитьВыполнилось(Шаблон);

	URL = "йохохо";
	Шаблон = СтрШаблон("а = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(""%1"")", URL);
	Фреймворк.ПроверитьНеВыполнилось(Шаблон, "Ошибка работы с Интернет:   Couldn't resolve host name");

КонецПроцедуры

// @unit-test
Процедура Тест_МетодПолученияОписанияВебСервисаПоАдресуДолженВозвращатьНеопределеноЕслиПараметрФэйл(Фреймворк) Экспорт

	URL = "";
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьТип(Ответ, "Неопределено");

	URL = Новый Массив;
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьТип(Ответ, "Неопределено");

КонецПроцедуры

//@unit-test
Процедура Тест_ОткликВебСервиса(Фреймворк) Экспорт

	URL = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("МестоположениеСервисовИБРаспределителя");
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьИстину(Ответ.Свойство("Ответ"));
	Фреймворк.ПроверитьТип(Ответ.Ответ, "Структура", "Веб-сервис не отвечает.");
	Фреймворк.ПроверитьЗаполненность(Ответ.Ответ, "Ответ веб-сервиса не должен быть пустым.");
	Фреймворк.ПроверитьРавенство(Ответ.Ответ.КодСостояния, 200, "Веб-сервис отвечает, но с ошибкой.");

КонецПроцедуры

//@unit-test
Процедура Тест_МетодПолученияОписанияВебСервисаПоАдресуВозвращаетКорректнуюСтруктуруДанных(Фреймворк) Экспорт

	URL = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("МестоположениеСервисовИБРаспределителя");
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьРавенство(Ответ.Количество(), 3);
	Фреймворк.ПроверитьИстину(Ответ.Свойство("Ответ"));
	Фреймворк.ПроверитьИстину(Ответ.Свойство("Соответствие"));
	Фреймворк.ПроверитьИстину(Ответ.Свойство("json"));

	URL = URL + "йохохо";
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьТип(Ответ, "Неопределено", "При ошибочном имени сервиса должно вернуться Неопределено.");

КонецПроцедуры

//@unit-test
Процедура Тест_МетодПолученияОписанияВебСервисПоАдресуПроверкаНаСвойствоEnabled(Фреймворк) Экспорт

	URL = Фреймворк.ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого("МестоположениеСервисовИБРаспределителя");
	ОписаниеСервиса = Тест_РаботаСИнтернетСервисамиСервер.ПолучитьОписаниеСервиса("gitlab");
	Фреймворк.ПроверитьТип(ОписаниеСервиса, "Структура");
	Фреймворк.ПроверитьИстину(ОписаниеСервиса.Свойство("enabled"));
	Ответ = Тест_РаботаСИнтернетСервисамиСервер.ОписаниеСервисаПоАдресуВызовСервера(URL);
	Фреймворк.ПроверитьРавенство(ОписаниеСервиса.Свойство("enabled"), Ответ.Соответствие["services"].Получить(
		"enabled"));

КонецПроцедуры



#КонецОбласти